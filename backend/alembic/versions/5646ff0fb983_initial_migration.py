"""Initial migration

Revision ID: 5646ff0fb983
Revises: 
Create Date: 2025-05-06 21:27:01.535187

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = '5646ff0fb983'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('meta_button',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('uuid', sa.UUID(), nullable=True),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('css', sa.String(length=20000), nullable=False),
    sa.Column('html', sa.String(length=20000), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_meta_button_id'), 'meta_button', ['id'], unique=False)
    op.create_index(op.f('ix_meta_button_uuid'), 'meta_button', ['uuid'], unique=True)
    op.create_table('protocols',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('uuid', sa.UUID(), nullable=True),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=300), nullable=False),
    sa.Column('type', sa.String(length=30), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_protocols_id'), 'protocols', ['id'], unique=False)
    op.create_index(op.f('ix_protocols_uuid'), 'protocols', ['uuid'], unique=True)
    op.create_table('states',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('uuid', sa.UUID(), nullable=True),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('data', sa.LargeBinary(), nullable=False),
    sa.Column('time', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_states_id'), 'states', ['id'], unique=False)
    op.create_index(op.f('ix_states_uuid'), 'states', ['uuid'], unique=True)
    op.create_table('user',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('password', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=False)
    op.create_table('buttons',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('uuid', sa.UUID(), nullable=True),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=300), nullable=False),
    sa.Column('meta_button_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['meta_button_id'], ['meta_button.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_buttons_id'), 'buttons', ['id'], unique=False)
    op.create_index(op.f('ix_buttons_uuid'), 'buttons', ['uuid'], unique=True)
    op.create_table('devices',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('uuid', sa.UUID(), nullable=True),
    sa.Column('unique_name', sa.String(length=100), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=300), nullable=False),
    sa.Column('css', sa.String(length=20000), nullable=False),
    sa.Column('html', sa.String(length=20000), nullable=False),
    sa.Column('protocol_id', sa.Integer(), nullable=False),
    sa.Column('exposes', sa.String(length=10000), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['protocol_id'], ['protocols.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('unique_name')
    )
    op.create_index(op.f('ix_devices_id'), 'devices', ['id'], unique=False)
    op.create_index(op.f('ix_devices_uuid'), 'devices', ['uuid'], unique=True)
    op.create_table('button_states',
    sa.Column('button_id', sa.Integer(), nullable=False),
    sa.Column('state_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['button_id'], ['buttons.id'], ),
    sa.ForeignKeyConstraint(['state_id'], ['states.id'], ),
    sa.PrimaryKeyConstraint('button_id', 'state_id')
    )
    op.create_table('device_buttons',
    sa.Column('device_id', sa.Integer(), nullable=False),
    sa.Column('button_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['button_id'], ['buttons.id'], ),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ),
    sa.PrimaryKeyConstraint('device_id', 'button_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('device_buttons')
    op.drop_table('button_states')
    op.drop_index(op.f('ix_devices_uuid'), table_name='devices')
    op.drop_index(op.f('ix_devices_id'), table_name='devices')
    op.drop_table('devices')
    op.drop_index(op.f('ix_buttons_uuid'), table_name='buttons')
    op.drop_index(op.f('ix_buttons_id'), table_name='buttons')
    op.drop_table('buttons')
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_states_uuid'), table_name='states')
    op.drop_index(op.f('ix_states_id'), table_name='states')
    op.drop_table('states')
    op.drop_index(op.f('ix_protocols_uuid'), table_name='protocols')
    op.drop_index(op.f('ix_protocols_id'), table_name='protocols')
    op.drop_table('protocols')
    op.drop_index(op.f('ix_meta_button_uuid'), table_name='meta_button')
    op.drop_index(op.f('ix_meta_button_id'), table_name='meta_button')
    op.drop_table('meta_button')
    # ### end Alembic commands ###
